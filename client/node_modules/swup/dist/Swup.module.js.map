{"version":3,"file":"Swup.module.js","sources":["../src/helpers/classify.ts","../src/helpers/getCurrentUrl.ts","../src/helpers/history.ts","../src/helpers/delegateEvent.ts","../src/helpers/Location.ts","../src/helpers/matchPath.ts","../src/modules/fetchPage.ts","../src/modules/Cache.ts","../src/utils/index.ts","../src/modules/Classes.ts","../src/modules/Visit.ts","../src/modules/Hooks.ts","../src/modules/getAnchorElement.ts","../src/modules/awaitAnimations.ts","../src/modules/navigate.ts","../src/modules/animatePageOut.ts","../src/modules/replaceContent.ts","../src/modules/scrollToContent.ts","../src/modules/animatePageIn.ts","../src/modules/renderPage.ts","../src/modules/plugins.ts","../src/modules/resolveUrl.ts","../src/Swup.ts"],"sourcesContent":["/** Turn a string into a slug by lowercasing and replacing whitespace. */\nexport const classify = (text: string, fallback?: string): string => {\n\tconst output = String(text)\n\t\t.toLowerCase()\n\t\t// .normalize('NFD') // split an accented letter in the base letter and the acent\n\t\t// .replace(/[\\u0300-\\u036f]/g, '') // remove all previously split accents\n\t\t.replace(/[\\s/_.]+/g, '-') // replace spaces and _./ with '-'\n\t\t.replace(/[^\\w-]+/g, '') // remove all non-word chars\n\t\t.replace(/--+/g, '-') // replace repeating '-' with single '-'\n\t\t.replace(/^-+|-+$/g, ''); // trim '-' from edges\n\treturn output || fallback || '';\n};\n","/** Get the current page URL: path name + query params. Optionally including hash. */\nexport const getCurrentUrl = ({ hash }: { hash?: boolean } = {}): string => {\n\treturn window.location.pathname + window.location.search + (hash ? window.location.hash : '');\n};\n","import { getCurrentUrl } from './getCurrentUrl.js';\n\nexport interface HistoryState {\n\turl: string;\n\tsource: 'swup';\n\trandom: number;\n\tindex?: number;\n\t[key: string]: unknown;\n}\n\ntype HistoryData = Record<string, unknown>;\n\n/** Create a new history record with a custom swup identifier. */\nexport const createHistoryRecord = (url: string, data: HistoryData = {}): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst state: HistoryState = {\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...data\n\t};\n\twindow.history.pushState(state, '', url);\n};\n\n/** Update the current history record with a custom swup identifier. */\nexport const updateHistoryRecord = (url: string | null = null, data: HistoryData = {}): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst currentState = (window.history.state as HistoryState) || {};\n\tconst state: HistoryState = {\n\t\t...currentState,\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...data\n\t};\n\twindow.history.replaceState(state, '', url);\n};\n","import delegate, {\n\ttype DelegateEventHandler,\n\ttype DelegateOptions,\n\ttype EventType\n} from 'delegate-it';\nimport type { ParseSelector } from 'typed-query-selector/parser.js';\n\nexport type DelegateEventUnsubscribe = {\n\tdestroy: () => void;\n};\n\n/** Register a delegated event listener. */\nexport const delegateEvent = <\n\tSelector extends string,\n\tTElement extends Element = ParseSelector<Selector, HTMLElement>,\n\tTEvent extends EventType = EventType\n>(\n\tselector: Selector,\n\ttype: TEvent,\n\tcallback: DelegateEventHandler<GlobalEventHandlersEventMap[TEvent], TElement>,\n\toptions?: DelegateOptions\n): DelegateEventUnsubscribe => {\n\tconst controller = new AbortController();\n\toptions = { ...options, signal: controller.signal };\n\tdelegate<Selector, TElement, TEvent>(selector, type, callback, options);\n\treturn { destroy: () => controller.abort() };\n};\n","/**\n * A helper for creating a Location from either an element\n * or a URL object/string\n *\n */\nexport class Location extends URL {\n\tconstructor(url: URL | string, base: string = document.baseURI) {\n\t\tsuper(url.toString(), base);\n\t\t// Fix Safari bug with extending native classes\n\t\tObject.setPrototypeOf(this, Location.prototype);\n\t}\n\n\t/**\n\t * The full local path including query params.\n\t */\n\tget url(): string {\n\t\treturn this.pathname + this.search;\n\t}\n\n\t/**\n\t * Instantiate a Location from an element's href attribute\n\t * @param el\n\t * @returns new Location instance\n\t */\n\tstatic fromElement(el: Element): Location {\n\t\tconst href = el.getAttribute('href') || el.getAttribute('xlink:href') || '';\n\t\treturn new Location(href);\n\t}\n\n\t/**\n\t * Instantiate a Location from a URL object or string\n\t * @param url\n\t * @returns new Location instance\n\t */\n\tstatic fromUrl(url: URL | string): Location {\n\t\treturn new Location(url);\n\t}\n}\n","import { match } from 'path-to-regexp';\n\nimport type {\n\tPath,\n\tParseOptions,\n\tTokensToRegexpOptions,\n\tRegexpToFunctionOptions,\n\tMatchFunction\n} from 'path-to-regexp';\n\nexport { type Path };\n\n/** Create a match function from a path pattern that checks if a URLs matches it. */\nexport const matchPath = <P extends object = object>(\n\tpath: Path,\n\toptions?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions\n): MatchFunction<P> => {\n\ttry {\n\t\treturn match<P>(path, options);\n\t} catch (error) {\n\t\tthrow new Error(`[swup] Error parsing path \"${String(path)}\":\\n${String(error)}`);\n\t}\n};\n","import type Swup from '../Swup.js';\nimport { Location } from '../helpers.js';\nimport type { Visit } from './Visit.js';\n\n/** A page object as used by swup and its cache. */\nexport interface PageData {\n\t/** The URL of the page */\n\turl: string;\n\t/** The complete HTML response received from the server */\n\thtml: string;\n}\n\n/** Define how a page is fetched. */\nexport interface FetchOptions extends Omit<RequestInit, 'cache'> {\n\t/** The request method. */\n\tmethod?: 'GET' | 'POST';\n\t/** The body of the request: raw string, form data object or URL params. */\n\tbody?: string | FormData | URLSearchParams;\n\t/** The request timeout in milliseconds. */\n\ttimeout?: number;\n\t/** Optional visit object with additional context. @internal */\n\tvisit?: Visit;\n}\n\nexport class FetchError extends Error {\n\turl: string;\n\tstatus?: number;\n\taborted: boolean;\n\ttimedOut: boolean;\n\tconstructor(\n\t\tmessage: string,\n\t\tdetails: { url: string; status?: number; aborted?: boolean; timedOut?: boolean }\n\t) {\n\t\tsuper(message);\n\t\tthis.name = 'FetchError';\n\t\tthis.url = details.url;\n\t\tthis.status = details.status;\n\t\tthis.aborted = details.aborted || false;\n\t\tthis.timedOut = details.timedOut || false;\n\t}\n}\n\n/**\n * Fetch a page from the server, return it and cache it.\n */\nexport async function fetchPage(\n\tthis: Swup,\n\turl: URL | string,\n\toptions: FetchOptions = {}\n): Promise<PageData> {\n\turl = Location.fromUrl(url).url;\n\n\tconst { visit = this.visit } = options;\n\tconst headers = { ...this.options.requestHeaders, ...options.headers };\n\tconst timeout = options.timeout ?? this.options.timeout;\n\tconst controller = new AbortController();\n\tconst { signal } = controller;\n\toptions = { ...options, headers, signal };\n\n\tlet timedOut = false;\n\tlet timeoutId: ReturnType<typeof setTimeout> | null = null;\n\tif (timeout && timeout > 0) {\n\t\ttimeoutId = setTimeout(() => {\n\t\t\ttimedOut = true;\n\t\t\tcontroller.abort('timeout');\n\t\t}, timeout);\n\t}\n\n\t// Allow hooking before this and returning a custom response-like object (e.g. custom fetch implementation)\n\tlet response: Response;\n\ttry {\n\t\tresponse = await this.hooks.call(\n\t\t\t'fetch:request',\n\t\t\tvisit,\n\t\t\t{ url, options },\n\t\t\t(visit, { url, options }) => fetch(url, options)\n\t\t);\n\t\tif (timeoutId) {\n\t\t\tclearTimeout(timeoutId);\n\t\t}\n\t} catch (error) {\n\t\tif (timedOut) {\n\t\t\tthis.hooks.call('fetch:timeout', visit, { url });\n\t\t\tthrow new FetchError(`Request timed out: ${url}`, { url, timedOut });\n\t\t}\n\t\tif ((error as Error)?.name === 'AbortError' || signal.aborted) {\n\t\t\tthrow new FetchError(`Request aborted: ${url}`, { url, aborted: true });\n\t\t}\n\t\tthrow error;\n\t}\n\n\tconst { status, url: responseUrl } = response;\n\tconst html = await response.text();\n\n\tif (status === 500) {\n\t\tthis.hooks.call('fetch:error', visit, { status, response, url: responseUrl });\n\t\tthrow new FetchError(`Server error: ${responseUrl}`, { status, url: responseUrl });\n\t}\n\n\tif (!html) {\n\t\tthrow new FetchError(`Empty response: ${responseUrl}`, { status, url: responseUrl });\n\t}\n\n\t// Resolve real url after potential redirect\n\tconst { url: finalUrl } = Location.fromUrl(responseUrl);\n\tconst page = { url: finalUrl, html };\n\n\t// Write to cache for safe methods and non-redirects\n\tif (visit.cache.write && (!options.method || options.method === 'GET') && url === finalUrl) {\n\t\tthis.cache.set(page.url, page);\n\t}\n\n\treturn page;\n}\n","import type Swup from '../Swup.js';\nimport { Location } from '../helpers.js';\nimport { type PageData } from './fetchPage.js';\n\nexport interface CacheData extends PageData {}\n\n/**\n * In-memory page cache.\n */\nexport class Cache {\n\t/** Swup instance this cache belongs to */\n\tprotected swup: Swup;\n\n\t/** Cached pages, indexed by URL */\n\tprotected pages: Map<string, CacheData> = new Map();\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\t/** Number of cached pages in memory. */\n\tget size(): number {\n\t\treturn this.pages.size;\n\t}\n\n\t/** All cached pages. */\n\tget all() {\n\t\tconst copy = new Map();\n\t\tthis.pages.forEach((page, key) => {\n\t\t\tcopy.set(key, { ...page });\n\t\t});\n\t\treturn copy;\n\t}\n\n\t/** Check if the given URL has been cached. */\n\thas(url: string): boolean {\n\t\treturn this.pages.has(this.resolve(url));\n\t}\n\n\t/** Return a shallow copy of the cached page object if available. */\n\tget(url: string): CacheData | undefined {\n\t\tconst result = this.pages.get(this.resolve(url));\n\t\tif (!result) return result;\n\t\treturn { ...result };\n\t}\n\n\t/** Create a cache record for the specified URL. */\n\tset(url: string, page: CacheData) {\n\t\turl = this.resolve(url);\n\t\tpage = { ...page, url };\n\t\tthis.pages.set(url, page);\n\t\tthis.swup.hooks.callSync('cache:set', undefined, { page });\n\t}\n\n\t/** Update a cache record, overwriting or adding custom data. */\n\tupdate(url: string, payload: object) {\n\t\turl = this.resolve(url);\n\t\tconst page = { ...this.get(url), ...payload, url } as CacheData;\n\t\tthis.pages.set(url, page);\n\t}\n\n\t/** Delete a cache record. */\n\tdelete(url: string): void {\n\t\tthis.pages.delete(this.resolve(url));\n\t}\n\n\t/** Empty the cache. */\n\tclear(): void {\n\t\tthis.pages.clear();\n\t\tthis.swup.hooks.callSync('cache:clear', undefined, undefined);\n\t}\n\n\t/** Remove all cache entries that return true for a given predicate function.  */\n\tprune(predicate: (url: string, page: CacheData) => boolean): void {\n\t\tthis.pages.forEach((page, url) => {\n\t\t\tif (predicate(url, page)) {\n\t\t\t\tthis.delete(url);\n\t\t\t}\n\t\t});\n\t}\n\n\t/** Resolve URLs by making them local and letting swup resolve them. */\n\tprotected resolve(urlToResolve: string): string {\n\t\tconst { url } = Location.fromUrl(urlToResolve);\n\t\treturn this.swup.resolveUrl(url);\n\t}\n}\n","/** Find an element by selector. */\nexport const query = (selector: string, context: Document | Element = document) => {\n\treturn context.querySelector<HTMLElement>(selector);\n};\n\n/** Find a set of elements by selector. */\nexport const queryAll = (\n\tselector: string,\n\tcontext: Document | Element = document\n): HTMLElement[] => {\n\treturn Array.from(context.querySelectorAll(selector));\n};\n\n/** Return a Promise that resolves after the next event loop. */\nexport const nextTick = (): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\trequestAnimationFrame(() => {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t});\n};\n\n/** Check if an object is a Promise or a Thenable */\nexport function isPromise<T>(obj: unknown): obj is PromiseLike<T> {\n\treturn (\n\t\t!!obj &&\n\t\t(typeof obj === 'object' || typeof obj === 'function') &&\n\t\ttypeof (obj as Record<string, unknown>).then === 'function'\n\t);\n}\n\n/** Call a function as a Promise. Resolves with the returned Promsise or immediately. */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nexport function runAsPromise(func: Function, args: unknown[] = []): Promise<unknown> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst result: unknown = func(...args);\n\t\tif (isPromise(result)) {\n\t\t\tresult.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(result);\n\t\t}\n\t});\n}\n\n/**\n * Force a layout reflow, e.g. after adding classnames\n * @see https://stackoverflow.com/a/21665117/3759615\n */\nexport function forceReflow(element?: HTMLElement): void {\n\telement = element || document.body;\n\telement?.getBoundingClientRect();\n}\n\n/**\n * Read data attribute from closest element with that attribute.\n *\n * Returns `undefined` if no element is found or attribute is missing.\n * Returns `true` if attribute is present without a value.\n */\nexport function getContextualAttr(\n\tel: Element | undefined,\n\tattr: string\n): string | boolean | undefined {\n\tconst target = el?.closest(`[${attr}]`);\n\treturn target?.hasAttribute(attr) ? target?.getAttribute(attr) || true : undefined;\n}\n","import type Swup from '../Swup.js';\nimport { queryAll } from '../utils.js';\n\nexport class Classes {\n\tprotected swup: Swup;\n\tprotected swupClasses = [\n\t\t'to-',\n\t\t'is-changing',\n\t\t'is-rendering',\n\t\t'is-popstate',\n\t\t'is-animating',\n\t\t'is-leaving'\n\t];\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\tprotected get selectors(): string[] {\n\t\tconst { scope } = this.swup.visit.animation;\n\t\tif (scope === 'containers') return this.swup.visit.containers;\n\t\tif (scope === 'html') return ['html'];\n\t\tif (Array.isArray(scope)) return scope;\n\t\treturn [];\n\t}\n\n\tprotected get selector(): string {\n\t\treturn this.selectors.join(',');\n\t}\n\n\tprotected get targets(): HTMLElement[] {\n\t\tif (!this.selector.trim()) return [];\n\t\treturn queryAll(this.selector);\n\t}\n\n\tadd(...classes: string[]): void {\n\t\tthis.targets.forEach((target) => target.classList.add(...classes));\n\t}\n\n\tremove(...classes: string[]): void {\n\t\tthis.targets.forEach((target) => target.classList.remove(...classes));\n\t}\n\n\tclear(): void {\n\t\tthis.targets.forEach((target) => {\n\t\t\tconst remove = target.className.split(' ').filter((c) => this.isSwupClass(c));\n\t\t\ttarget.classList.remove(...remove);\n\t\t});\n\t}\n\n\tprotected isSwupClass(className: string): boolean {\n\t\treturn this.swupClasses.some((c) => className.startsWith(c));\n\t}\n}\n","import type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\nimport type { HistoryAction, HistoryDirection } from './navigate.js';\n\n/** See below for the class Visit {} definition */\n// export interface Visit {}\n\nexport interface VisitFrom {\n\t/** The URL of the previous page */\n\turl: string;\n\t/** The hash of the previous page */\n\thash?: string;\n}\n\nexport interface VisitTo {\n\t/** The URL of the next page */\n\turl: string;\n\t/** The hash of the next page */\n\thash?: string;\n\t/** The HTML content of the next page */\n\thtml?: string;\n\t/** The parsed document of the next page, available during visit */\n\tdocument?: Document;\n}\n\nexport interface VisitAnimation {\n\t/** Whether this visit is animated. Default: `true` */\n\tanimate: boolean;\n\t/** Whether to wait for the next page to load before starting the animation. Default: `false` */\n\twait: boolean;\n\t/** Name of a custom animation to run. */\n\tname?: string;\n\t/** Whether this animation uses the native browser ViewTransition API. Default: `false` */\n\tnative: boolean;\n\t/** Elements on which to add animation classes. Default: `html` element */\n\tscope: 'html' | 'containers' | string[];\n\t/** Selector for detecting animation timing. Default: `[class*=\"transition-\"]` */\n\tselector: Options['animationSelector'];\n}\n\nexport interface VisitScroll {\n\t/** Whether to reset the scroll position after the visit. Default: `true` */\n\treset: boolean;\n\t/** Anchor element to scroll to on the next page. */\n\ttarget?: string | false;\n}\n\nexport interface VisitTrigger {\n\t/** DOM element that triggered this visit. */\n\tel?: Element;\n\t/** DOM event that triggered this visit. */\n\tevent?: Event;\n}\n\nexport interface VisitCache {\n\t/** Whether this visit will try to load the requested page from cache. */\n\tread: boolean;\n\t/** Whether this visit will save the loaded page in cache. */\n\twrite: boolean;\n}\n\nexport interface VisitHistory {\n\t/** History action to perform: `push` for creating a new history entry, `replace` for replacing the current entry. Default: `push` */\n\taction: HistoryAction;\n\t/** Whether this visit was triggered by a browser history navigation. */\n\tpopstate: boolean;\n\t/** The direction of travel in case of a browser history navigation: backward or forward. */\n\tdirection: HistoryDirection | undefined;\n}\n\nexport interface VisitInitOptions {\n\tto: string;\n\tfrom?: string;\n\thash?: string;\n\tel?: Element;\n\tevent?: Event;\n}\n\n/** @internal */\nexport const VisitState = {\n\tCREATED: 1,\n\tQUEUED: 2,\n\tSTARTED: 3,\n\tLEAVING: 4,\n\tLOADED: 5,\n\tENTERING: 6,\n\tCOMPLETED: 7,\n\tABORTED: 8,\n\tFAILED: 9\n} as const;\n\n/** @internal */\nexport type VisitState = (typeof VisitState)[keyof typeof VisitState];\n\n/** An object holding details about the current visit. */\nexport class Visit {\n\t/** A unique ID to identify this visit */\n\tid: number;\n\t/** The current state of this visit @internal */\n\tstate: VisitState;\n\t/** The previous page, about to leave */\n\tfrom: VisitFrom;\n\t/** The next page, about to enter */\n\tto: VisitTo;\n\t/** The content containers, about to be replaced */\n\tcontainers: Options['containers'];\n\t/** Information about animated page transitions */\n\tanimation: VisitAnimation;\n\t/** What triggered this visit */\n\ttrigger: VisitTrigger;\n\t/** Cache behavior for this visit */\n\tcache: VisitCache;\n\t/** Browser history behavior on this visit */\n\thistory: VisitHistory;\n\t/** Scroll behavior on this visit */\n\tscroll: VisitScroll;\n\t/** User-defined metadata */\n\tmeta: Record<string, unknown>;\n\n\tconstructor(swup: Swup, options: VisitInitOptions) {\n\t\tconst { to, from, hash, el, event } = options;\n\n\t\tthis.id = Math.random();\n\t\tthis.state = VisitState.CREATED;\n\t\tthis.from = { url: from ?? swup.location.url, hash: swup.location.hash };\n\t\tthis.to = { url: to, hash };\n\t\tthis.containers = swup.options.containers;\n\t\tthis.animation = {\n\t\t\tanimate: true,\n\t\t\twait: false,\n\t\t\tname: undefined,\n\t\t\tnative: swup.options.native,\n\t\t\tscope: swup.options.animationScope,\n\t\t\tselector: swup.options.animationSelector\n\t\t};\n\t\tthis.trigger = { el, event };\n\t\tthis.cache = {\n\t\t\tread: swup.options.cache,\n\t\t\twrite: swup.options.cache\n\t\t};\n\t\tthis.history = {\n\t\t\taction: 'push',\n\t\t\tpopstate: false,\n\t\t\tdirection: undefined\n\t\t};\n\t\tthis.scroll = {\n\t\t\treset: true,\n\t\t\ttarget: undefined\n\t\t};\n\t\tthis.meta = {};\n\t}\n\n\t/** @internal */\n\tadvance(state: VisitState) {\n\t\tif (this.state < state) {\n\t\t\tthis.state = state;\n\t\t}\n\t}\n\n\t/** @internal */\n\tabort() {\n\t\tthis.state = VisitState.ABORTED;\n\t}\n\n\t/** Is this visit done, i.e. completed, failed, or aborted? */\n\tget done(): boolean {\n\t\treturn this.state >= VisitState.COMPLETED;\n\t}\n}\n\n/** Create a new visit object. */\nexport function createVisit(this: Swup, options: VisitInitOptions): Visit {\n\treturn new Visit(this, options);\n}\n","import type { DelegateEvent } from 'delegate-it';\n\nimport type Swup from '../Swup.js';\nimport { isPromise, runAsPromise } from '../utils.js';\nimport { Visit } from './Visit.js';\nimport type { FetchOptions, PageData } from './fetchPage.js';\n\nexport interface HookDefinitions {\n\t'animation:out:start': undefined;\n\t'animation:out:await': { skip: boolean };\n\t'animation:out:end': undefined;\n\t'animation:in:start': undefined;\n\t'animation:in:await': { skip: boolean };\n\t'animation:in:end': undefined;\n\t'animation:skip': undefined;\n\t'cache:clear': undefined;\n\t'cache:set': { page: PageData };\n\t'content:replace': { page: PageData };\n\t'content:scroll': undefined;\n\t'enable': undefined;\n\t'disable': undefined;\n\t'fetch:request': { url: string; options: FetchOptions };\n\t'fetch:error': { url: string; status: number; response: Response };\n\t'fetch:timeout': { url: string };\n\t'history:popstate': { event: PopStateEvent };\n\t'link:click': { el: HTMLAnchorElement; event: DelegateEvent<MouseEvent> };\n\t'link:self': undefined;\n\t'link:anchor': { hash: string };\n\t'link:newtab': { href: string };\n\t'page:load': { page?: PageData; cache?: boolean; options: FetchOptions };\n\t'page:view': { url: string; title: string };\n\t'scroll:top': { options: ScrollIntoViewOptions };\n\t'scroll:anchor': { hash: string; options: ScrollIntoViewOptions };\n\t'visit:start': undefined;\n\t'visit:transition': undefined;\n\t'visit:abort': undefined;\n\t'visit:end': undefined;\n}\n\nexport interface HookReturnValues {\n\t'content:scroll': Promise<boolean> | boolean;\n\t'fetch:request': Promise<Response>;\n\t'page:load': Promise<PageData>;\n\t'scroll:top': boolean;\n\t'scroll:anchor': boolean;\n}\n\nexport type HookArguments<T extends HookName> = HookDefinitions[T];\n\nexport type HookName = keyof HookDefinitions;\n\nexport type HookNameWithModifier = `${HookName}.${HookModifier}`;\n\ntype HookModifier = 'once' | 'before' | 'replace';\n\n/** A generic hook handler. */\nexport type HookHandler<T extends HookName> = (\n\t/** Context about the current visit. */\n\tvisit: Visit,\n\t/** Local arguments passed into the handler. */\n\targs: HookArguments<T>\n) => Promise<unknown> | unknown;\n\n/** A default hook handler with an expected return type. */\nexport type HookDefaultHandler<T extends HookName> = (\n\t/** Context about the current visit. */\n\tvisit: Visit,\n\t/** Local arguments passed into the handler. */\n\targs: HookArguments<T>,\n\t/** Default handler to be executed. Available if replacing an internal hook handler. */\n\tdefaultHandler?: HookDefaultHandler<T>\n) => T extends keyof HookReturnValues ? HookReturnValues[T] : Promise<unknown> | unknown;\n\nexport type Handlers = {\n\t[K in HookName]: HookHandler<K>[];\n};\n\nexport type HookInitOptions = {\n\t[K in HookName as K | `${K}.${HookModifier}`]: HookHandler<K>;\n};\n\n/** Unregister a previously registered hook handler. */\nexport type HookUnregister = () => void;\n\n/** Define when and how a hook handler is executed. */\nexport type HookOptions = {\n\t/** Execute the hook once, then remove the handler */\n\tonce?: boolean;\n\t/** Execute the hook before the internal default handler */\n\tbefore?: boolean;\n\t/** Set a priority for when to execute this hook. Lower numbers execute first. Default: `0` */\n\tpriority?: number;\n\t/** Replace the internal default handler with this hook handler */\n\treplace?: boolean;\n};\n\nexport type HookRegistration<\n\tT extends HookName,\n\tH extends HookHandler<T> | HookDefaultHandler<T> = HookHandler<T>\n> = {\n\tid: number;\n\thook: T;\n\thandler: H;\n\tdefaultHandler?: HookDefaultHandler<T>;\n} & HookOptions;\n\ntype HookEventDetail = {\n\thook: HookName;\n\targs: unknown;\n\tvisit: Visit;\n};\n\nexport type HookEvent = CustomEvent<HookEventDetail>;\n\ntype HookLedger<T extends HookName> = Map<HookHandler<T>, HookRegistration<T>>;\n\ninterface HookRegistry extends Map<HookName, HookLedger<HookName>> {\n\tget<K extends HookName>(key: K): HookLedger<K> | undefined;\n\tset<K extends HookName>(key: K, value: HookLedger<K>): this;\n}\n\n/**\n * Hook registry.\n *\n * Create, trigger and handle hooks.\n *\n */\nexport class Hooks {\n\t/** Swup instance this registry belongs to */\n\tprotected swup: Swup;\n\n\t/** Map of all registered hook handlers. */\n\tprotected registry: HookRegistry = new Map();\n\n\t// Can we deduplicate this somehow? Or make it error when not in sync with HookDefinitions?\n\t// https://stackoverflow.com/questions/53387838/how-to-ensure-an-arrays-values-the-keys-of-a-typescript-interface/53395649\n\tprotected readonly hooks: HookName[] = [\n\t\t'animation:out:start',\n\t\t'animation:out:await',\n\t\t'animation:out:end',\n\t\t'animation:in:start',\n\t\t'animation:in:await',\n\t\t'animation:in:end',\n\t\t'animation:skip',\n\t\t'cache:clear',\n\t\t'cache:set',\n\t\t'content:replace',\n\t\t'content:scroll',\n\t\t'enable',\n\t\t'disable',\n\t\t'fetch:request',\n\t\t'fetch:error',\n\t\t'fetch:timeout',\n\t\t'history:popstate',\n\t\t'link:click',\n\t\t'link:self',\n\t\t'link:anchor',\n\t\t'link:newtab',\n\t\t'page:load',\n\t\t'page:view',\n\t\t'scroll:top',\n\t\t'scroll:anchor',\n\t\t'visit:start',\n\t\t'visit:transition',\n\t\t'visit:abort',\n\t\t'visit:end'\n\t];\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t\tthis.init();\n\t}\n\n\t/**\n\t * Create ledgers for all core hooks.\n\t */\n\tprotected init() {\n\t\tthis.hooks.forEach((hook) => this.create(hook));\n\t}\n\n\t/**\n\t * Create a new hook type.\n\t */\n\tcreate(hook: string) {\n\t\tif (!this.registry.has(hook as HookName)) {\n\t\t\tthis.registry.set(hook as HookName, new Map());\n\t\t}\n\t}\n\n\t/**\n\t * Check if a hook type exists.\n\t */\n\texists(hook: HookName): boolean {\n\t\treturn this.registry.has(hook);\n\t}\n\n\t/**\n\t * Get the ledger with all registrations for a hook.\n\t */\n\tprotected get<T extends HookName>(hook: T): HookLedger<T> | undefined {\n\t\tconst ledger = this.registry.get(hook);\n\t\tif (ledger) {\n\t\t\treturn ledger;\n\t\t}\n\t\tconsole.error(`Unknown hook '${hook}'`);\n\t}\n\n\t/**\n\t * Remove all handlers of all hooks.\n\t */\n\tclear() {\n\t\tthis.registry.forEach((ledger) => ledger.clear());\n\t}\n\n\t/**\n\t * Register a new hook handler.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Object to specify how and when the handler is executed\n\t *                Available options:\n\t *                - `once`: Only execute the handler once\n\t *                - `before`: Execute the handler before the default handler\n\t *                - `priority`: Specify the order in which the handlers are executed\n\t *                - `replace`: Replace the default handler with this handler\n\t * @returns A function to unregister the handler\n\t */\n\n\t// Overload: replacing default handler\n\ton<T extends HookName, O extends HookOptions>(hook: T, handler: HookDefaultHandler<T>, options: O & { replace: true }): HookUnregister; // prettier-ignore\n\t// Overload: passed in handler options\n\ton<T extends HookName, O extends HookOptions>(hook: T, handler: HookHandler<T>, options: O): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\ton<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister; // prettier-ignore\n\t// Implementation\n\ton<T extends HookName, O extends HookOptions>(\n\t\thook: T,\n\t\thandler: O['replace'] extends true ? HookDefaultHandler<T> : HookHandler<T>,\n\t\toptions: Partial<O> = {}\n\t): HookUnregister {\n\t\tconst ledger = this.get(hook);\n\t\tif (!ledger) {\n\t\t\tconsole.warn(`Hook '${hook}' not found.`);\n\t\t\treturn () => {};\n\t\t}\n\n\t\tconst id = ledger.size + 1;\n\t\tconst registration: HookRegistration<T> = { ...options, id, hook, handler };\n\t\tledger.set(handler, registration);\n\n\t\treturn () => this.off(hook, handler);\n\t}\n\n\t/**\n\t * Register a new hook handler to run before the default handler.\n\t * Shortcut for `hooks.on(hook, handler, { before: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @returns A function to unregister the handler\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\tbefore<T extends HookName>(hook: T, handler: HookHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\tbefore<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister;\n\t// Implementation\n\tbefore<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, before: true });\n\t}\n\n\t/**\n\t * Register a new hook handler to replace the default handler.\n\t * Shortcut for `hooks.on(hook, handler, { replace: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute instead of the default handler\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @returns A function to unregister the handler\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\treplace<T extends HookName>(hook: T, handler: HookDefaultHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\treplace<T extends HookName>(hook: T, handler: HookDefaultHandler<T>): HookUnregister; // prettier-ignore\n\t// Implementation\n\treplace<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookDefaultHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, replace: true });\n\t}\n\n\t/**\n\t * Register a new hook handler to run once.\n\t * Shortcut for `hooks.on(hook, handler, { once: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\tonce<T extends HookName>(hook: T, handler: HookHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\tonce<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister;\n\t// Implementation\n\tonce<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, once: true });\n\t}\n\n\t/**\n\t * Unregister a hook handler.\n\t * @param hook Name of the hook the handler is registered for\n\t * @param handler The handler function that was registered.\n\t *                If omitted, all handlers for the hook will be removed.\n\t */\n\t// Overload: unregister a specific handler\n\toff<T extends HookName>(hook: T, handler: HookHandler<T> | HookDefaultHandler<T>): void;\n\t// Overload: unregister all handlers\n\toff<T extends HookName>(hook: T): void;\n\t// Implementation\n\toff<T extends HookName>(hook: T, handler?: HookHandler<T> | HookDefaultHandler<T>): void {\n\t\tconst ledger = this.get(hook);\n\t\tif (ledger && handler) {\n\t\t\tconst deleted = ledger.delete(handler);\n\t\t\tif (!deleted) {\n\t\t\t\tconsole.warn(`Handler for hook '${hook}' not found.`);\n\t\t\t}\n\t\t} else if (ledger) {\n\t\t\tledger.clear();\n\t\t}\n\t}\n\n\t/**\n\t * Trigger a hook asynchronously, executing its default handler and all registered handlers.\n\t * Will execute all handlers in order and `await` any `Promise`s they return.\n\t * @param hook Name of the hook to trigger\n\t * @param visit The visit object this hook belongs to\n\t * @param args Arguments to pass to the handler\n\t * @param defaultHandler A default implementation of this hook to execute\n\t * @returns The resolved return value of the executed default handler\n\t */\n\t// Overload: default order of arguments\n\tasync call<T extends HookName>(hook: T, visit: Visit | undefined, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>>; // prettier-ignore\n\t// Overload: legacy order of arguments, with visit missing\n\tasync call<T extends HookName>(hook: T, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>>; // prettier-ignore\n\t// Implementation\n\tasync call<T extends HookName>(\n\t\thook: T,\n\t\targ1: Visit | HookArguments<T>,\n\t\targ2: HookArguments<T> | HookDefaultHandler<T>,\n\t\targ3?: HookDefaultHandler<T>\n\t): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>> {\n\t\tconst [visit, args, defaultHandler] = this.parseCallArgs(hook, arg1, arg2, arg3);\n\n\t\tconst { before, handler, after } = this.getHandlers(hook, defaultHandler);\n\t\tawait this.run(before, visit, args);\n\t\tconst [result] = await this.run(handler, visit, args, true);\n\t\tawait this.run(after, visit, args);\n\t\tthis.dispatchDomEvent(hook, visit, args);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Trigger a hook synchronously, executing its default handler and all registered handlers.\n\t * Will execute all handlers in order, but will **not** `await` any `Promise`s they return.\n\t * @param hook Name of the hook to trigger\n\t * @param visit The visit object this hook belongs to\n\t * @param args Arguments to pass to the handler\n\t * @param defaultHandler A default implementation of this hook to execute\n\t * @returns The (possibly unresolved) return value of the executed default handler\n\t */\n\t// Overload: default order of arguments\n\tcallSync<T extends HookName>(hook: T, visit: Visit | undefined, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): ReturnType<HookDefaultHandler<T>>; // prettier-ignore\n\t// Overload: legacy order of arguments, with visit missing\n\tcallSync<T extends HookName>(hook: T, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): ReturnType<HookDefaultHandler<T>>; // prettier-ignore\n\t// Implementation\n\tcallSync<T extends HookName>(\n\t\thook: T,\n\t\targ1: Visit | HookArguments<T>,\n\t\targ2: HookArguments<T> | HookDefaultHandler<T>,\n\t\targ3?: HookDefaultHandler<T>\n\t): ReturnType<HookDefaultHandler<T>> {\n\t\tconst [visit, args, defaultHandler] = this.parseCallArgs(hook, arg1, arg2, arg3);\n\t\tconst { before, handler, after } = this.getHandlers(hook, defaultHandler);\n\t\tthis.runSync(before, visit, args);\n\t\tconst [result] = this.runSync(handler, visit, args, true);\n\t\tthis.runSync(after, visit, args);\n\t\tthis.dispatchDomEvent(hook, visit, args);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Parse the call arguments for call() and callSync() to allow legacy argument order.\n\t */\n\tprotected parseCallArgs<T extends HookName>(\n\t\thook: T,\n\t\targ1: Visit | HookArguments<T> | undefined,\n\t\targ2: HookArguments<T> | HookDefaultHandler<T>,\n\t\targ3?: HookDefaultHandler<T>\n\t): [Visit | undefined, HookArguments<T>, HookDefaultHandler<T> | undefined] {\n\t\tconst isLegacyOrder =\n\t\t\t!(arg1 instanceof Visit) && (typeof arg1 === 'object' || typeof arg2 === 'function');\n\t\tif (isLegacyOrder) {\n\t\t\t// Legacy positioning: arguments in second or handler passed in third place\n\t\t\treturn [undefined, arg1 as HookArguments<T>, arg2 as HookDefaultHandler<T>];\n\t\t} else {\n\t\t\t// Default positioning: visit passed in as first argument\n\t\t\treturn [arg1, arg2 as HookArguments<T>, arg3];\n\t\t}\n\t}\n\n\t/**\n\t * Execute the handlers for a hook, in order, as `Promise`s that will be `await`ed.\n\t * @param registrations The registrations (handler + options) to execute\n\t * @param args Arguments to pass to the handler\n\t */\n\n\t// Overload: running HookDefaultHandler: expect HookDefaultHandler return type\n\tprotected async run<T extends HookName>(registrations: HookRegistration<T, HookDefaultHandler<T>>[], visit: Visit | undefined, args: HookArguments<T>, rethrow: true): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>[]>; // prettier-ignore\n\t// Overload:  running user handler: expect no specific type\n\tprotected async run<T extends HookName>(registrations: HookRegistration<T>[], visit: Visit | undefined, args: HookArguments<T>): Promise<unknown[]>; // prettier-ignore\n\t// Implementation\n\tprotected async run<T extends HookName, R extends HookRegistration<T>[]>(\n\t\tregistrations: R,\n\t\tvisit: Visit | undefined = this.swup.visit,\n\t\targs: HookArguments<T>,\n\t\trethrow: boolean = false\n\t): Promise<Awaited<ReturnType<HookDefaultHandler<T>>> | unknown[]> {\n\t\tconst results = [];\n\t\tfor (const { hook, handler, defaultHandler, once } of registrations) {\n\t\t\tif (visit?.done) continue;\n\t\t\tif (once) this.off(hook, handler);\n\t\t\ttry {\n\t\t\t\tconst result = await runAsPromise(handler, [visit, args, defaultHandler]);\n\t\t\t\tresults.push(result);\n\t\t\t} catch (error) {\n\t\t\t\tif (rethrow) {\n\t\t\t\t\tthrow error;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(`Error in hook '${hook}':`, error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Execute the handlers for a hook, in order, without `await`ing any returned `Promise`s.\n\t * @param registrations The registrations (handler + options) to execute\n\t * @param args Arguments to pass to the handler\n\t */\n\n\t// Overload: running HookDefaultHandler: expect HookDefaultHandler return type\n\tprotected runSync<T extends HookName>(registrations: HookRegistration<T, HookDefaultHandler<T>>[], visit: Visit | undefined, args: HookArguments<T>, rethrow: true): ReturnType<HookDefaultHandler<T>>[]; // prettier-ignore\n\t// Overload: running user handler: expect no specific type\n\tprotected runSync<T extends HookName>(registrations: HookRegistration<T>[], visit: Visit | undefined, args: HookArguments<T>): unknown[]; // prettier-ignore\n\t// Implementation\n\tprotected runSync<T extends HookName, R extends HookRegistration<T>[]>(\n\t\tregistrations: R,\n\t\tvisit: Visit | undefined = this.swup.visit,\n\t\targs: HookArguments<T>,\n\t\trethrow: boolean = false\n\t): (ReturnType<HookDefaultHandler<T>> | unknown)[] {\n\t\tconst results = [];\n\t\tfor (const { hook, handler, defaultHandler, once } of registrations) {\n\t\t\tif (visit?.done) continue;\n\t\t\tif (once) this.off(hook, handler);\n\t\t\ttry {\n\t\t\t\tconst result = (handler as HookDefaultHandler<T>)(visit, args, defaultHandler);\n\t\t\t\tresults.push(result);\n\t\t\t\tif (isPromise(result)) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Swup will not await Promises in handler for synchronous hook '${hook}'.`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (rethrow) {\n\t\t\t\t\tthrow error;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(`Error in hook '${hook}':`, error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Get all registered handlers for a hook, sorted by priority and registration order.\n\t * @param hook Name of the hook\n\t * @param defaultHandler The optional default handler of this hook\n\t * @returns An object with the handlers sorted into `before` and `after` arrays,\n\t *          as well as a flag indicating if the original handler was replaced\n\t */\n\tprotected getHandlers<T extends HookName>(hook: T, defaultHandler?: HookDefaultHandler<T>) {\n\t\tconst ledger = this.get(hook);\n\t\tif (!ledger) {\n\t\t\treturn { found: false, before: [], handler: [], after: [], replaced: false };\n\t\t}\n\n\t\tconst registrations = Array.from(ledger.values());\n\n\t\t// Let TypeScript know that replaced handlers are default handlers by filtering to true\n\t\tconst def = (T: HookRegistration<T>): T is HookRegistration<T, HookDefaultHandler<T>> => true; // prettier-ignore\n\t\tconst sort = this.sortRegistrations;\n\n\t\t// Filter into before, after, and replace handlers\n\t\tconst before = registrations.filter(({ before, replace }) => before && !replace).sort(sort);\n\t\tconst replace = registrations.filter(({ replace }) => replace).filter(def).sort(sort); // prettier-ignore\n\t\tconst after = registrations.filter(({ before, replace }) => !before && !replace).sort(sort);\n\t\tconst replaced = replace.length > 0;\n\n\t\t// Define main handler registration\n\t\t// Created as HookRegistration[] array to allow passing it into hooks.run() directly\n\t\tlet handler: HookRegistration<T, HookDefaultHandler<T>>[] = [];\n\t\tif (defaultHandler) {\n\t\t\thandler = [{ id: 0, hook, handler: defaultHandler }];\n\t\t\tif (replaced) {\n\t\t\t\tconst index = replace.length - 1;\n\t\t\t\tconst replacingHandler = replace[index].handler;\n\t\t\t\tconst createDefaultHandler = (index: number): HookDefaultHandler<T> | undefined => {\n\t\t\t\t\tconst next = replace[index - 1];\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\treturn (visit, args) =>\n\t\t\t\t\t\t\tnext.handler(visit, args, createDefaultHandler(index - 1));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn defaultHandler;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst nestedDefaultHandler = createDefaultHandler(index);\n\t\t\t\thandler = [\n\t\t\t\t\t{ id: 0, hook, handler: replacingHandler, defaultHandler: nestedDefaultHandler }\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\treturn { found: true, before, handler, after, replaced };\n\t}\n\n\t/**\n\t * Sort two hook registrations by priority and registration order.\n\t * @param a The registration object to compare\n\t * @param b The other registration object to compare with\n\t * @returns The sort direction\n\t */\n\tprotected sortRegistrations<T extends HookName>(\n\t\ta: HookRegistration<T>,\n\t\tb: HookRegistration<T>\n\t): number {\n\t\tconst priority = (a.priority ?? 0) - (b.priority ?? 0);\n\t\tconst id = a.id - b.id;\n\t\treturn priority || id || 0;\n\t}\n\n\t/**\n\t * Dispatch a custom event on the `document` for a hook. Prefixed with `swup:`\n\t * @param hook Name of the hook.\n\t */\n\tprotected dispatchDomEvent<T extends HookName>(\n\t\thook: T,\n\t\tvisit: Visit | undefined,\n\t\targs?: HookArguments<T>\n\t): void {\n\t\tif (visit?.done) return;\n\n\t\tconst detail: HookEventDetail = { hook, args, visit: visit || this.swup.visit };\n\t\tdocument.dispatchEvent(\n\t\t\tnew CustomEvent<HookEventDetail>(`swup:any`, { detail, bubbles: true })\n\t\t);\n\t\tdocument.dispatchEvent(\n\t\t\tnew CustomEvent<HookEventDetail>(`swup:${hook}`, { detail, bubbles: true })\n\t\t);\n\t}\n\n\t/**\n\t * Parse a hook name into the name and any modifiers.\n\t * @param hook Name of the hook.\n\t */\n\tparseName(hook: HookName | HookNameWithModifier): [HookName, Partial<HookOptions>] {\n\t\tconst [name, ...modifiers] = hook.split('.');\n\t\tconst options = modifiers.reduce((acc, mod) => ({ ...acc, [mod]: true }), {});\n\t\treturn [name as HookName, options];\n\t}\n}\n","import { query } from '../utils.js';\n\n/**\n * Find the anchor element for a given hash.\n *\n * @param hash Hash with or without leading '#'\n * @returns The element, if found, or null.\n *\n * @see https://html.spec.whatwg.org/#find-a-potential-indicated-element\n */\nexport const getAnchorElement = (hash?: string): Element | null => {\n\tif (hash && hash.charAt(0) === '#') {\n\t\thash = hash.substring(1);\n\t}\n\n\tif (!hash) {\n\t\treturn null;\n\t}\n\n\tconst decoded = decodeURIComponent(hash);\n\tlet element =\n\t\tdocument.getElementById(hash) ||\n\t\tdocument.getElementById(decoded) ||\n\t\tquery(`a[name='${CSS.escape(hash)}']`) ||\n\t\tquery(`a[name='${CSS.escape(decoded)}']`);\n\n\tif (!element && hash === 'top') {\n\t\telement = document.body;\n\t}\n\n\treturn element;\n};\n","import { queryAll } from '../utils.js';\nimport type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\n\nconst TRANSITION = 'transition';\nconst ANIMATION = 'animation';\n\ntype AnimationType = typeof TRANSITION | typeof ANIMATION;\ntype AnimationEndEvent = `${AnimationType}end`;\ntype AnimationProperty = 'Delay' | 'Duration';\ntype AnimationStyleKey = `${AnimationType}${AnimationProperty}` | 'transitionProperty';\n\nexport type AnimationDirection = 'in' | 'out';\n\n/**\n * Return a Promise that resolves when all CSS animations and transitions\n * are done on the page. Filters by selector or takes elements directly.\n */\nexport async function awaitAnimations(\n\tthis: Swup,\n\t{\n\t\tselector,\n\t\telements\n\t}: {\n\t\tselector: Options['animationSelector'];\n\t\telements?: NodeListOf<HTMLElement> | HTMLElement[];\n\t}\n): Promise<void> {\n\t// Allow usage of swup without animations: { animationSelector: false }\n\tif (selector === false && !elements) {\n\t\treturn;\n\t}\n\n\t// Allow passing in elements\n\tlet animatedElements: HTMLElement[] = [];\n\tif (elements) {\n\t\tanimatedElements = Array.from(elements);\n\t} else if (selector) {\n\t\tanimatedElements = queryAll(selector, document.body);\n\t\t// Warn if no elements match the selector, but keep things going\n\t\tif (!animatedElements.length) {\n\t\t\tconsole.warn(`[swup] No elements found matching animationSelector \\`${selector}\\``);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst awaitedAnimations = animatedElements.map((el) => awaitAnimationsOnElement(el));\n\tconst hasAnimations = awaitedAnimations.filter(Boolean).length > 0;\n\tif (!hasAnimations) {\n\t\tif (selector) {\n\t\t\tconsole.warn(\n\t\t\t\t`[swup] No CSS animation duration defined on elements matching \\`${selector}\\``\n\t\t\t);\n\t\t}\n\t\treturn;\n\t}\n\n\tawait Promise.all(awaitedAnimations);\n}\n\nfunction awaitAnimationsOnElement(element: HTMLElement): Promise<void> | false {\n\tconst { type, timeout, propCount } = getTransitionInfo(element);\n\n\t// Resolve immediately if no transition defined\n\tif (!type || !timeout) {\n\t\treturn false;\n\t}\n\n\treturn new Promise((resolve) => {\n\t\tconst endEvent: AnimationEndEvent = `${type}end`;\n\t\tconst startTime = performance.now();\n\t\tlet propsTransitioned = 0;\n\n\t\tconst end = () => {\n\t\t\telement.removeEventListener(endEvent, onEnd);\n\t\t\tresolve();\n\t\t};\n\n\t\tconst onEnd = (event: TransitionEvent | AnimationEvent) => {\n\t\t\t// Skip transitions on child elements\n\t\t\tif (event.target !== element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip transitions that happened before we started listening\n\t\t\tconst elapsedTime = (performance.now() - startTime) / 1000;\n\t\t\tif (elapsedTime < event.elapsedTime) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// End if all properties have transitioned\n\t\t\tif (++propsTransitioned >= propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t};\n\n\t\tsetTimeout(() => {\n\t\t\tif (propsTransitioned < propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t}, timeout + 1);\n\n\t\telement.addEventListener(endEvent, onEnd);\n\t});\n}\n\nfunction getTransitionInfo(element: Element) {\n\tconst styles = window.getComputedStyle(element);\n\n\tconst transitionDelays = getStyleProperties(styles, `${TRANSITION}Delay`);\n\tconst transitionDurations = getStyleProperties(styles, `${TRANSITION}Duration`);\n\tconst transitionTimeout = calculateTimeout(transitionDelays, transitionDurations);\n\n\tconst animationDelays = getStyleProperties(styles, `${ANIMATION}Delay`);\n\tconst animationDurations = getStyleProperties(styles, `${ANIMATION}Duration`);\n\tconst animationTimeout = calculateTimeout(animationDelays, animationDurations);\n\n\tconst timeout = Math.max(transitionTimeout, animationTimeout);\n\tconst type: AnimationType | null =\n\t\ttimeout > 0 ? (transitionTimeout > animationTimeout ? TRANSITION : ANIMATION) : null;\n\tconst propCount = type\n\t\t? type === TRANSITION\n\t\t\t? transitionDurations.length\n\t\t\t: animationDurations.length\n\t\t: 0;\n\n\treturn {\n\t\ttype,\n\t\ttimeout,\n\t\tpropCount\n\t};\n}\n\nexport function getStyleProperties(styles: CSSStyleDeclaration, key: AnimationStyleKey): string[] {\n\treturn (styles[key] || '').split(', ');\n}\n\nexport function calculateTimeout(delays: string[], durations: string[]): number {\n\twhile (delays.length < durations.length) {\n\t\tdelays = delays.concat(delays);\n\t}\n\n\treturn Math.max(...durations.map((duration, i) => toMs(duration) + toMs(delays[i])));\n}\n\nexport function toMs(time: string): number {\n\treturn parseFloat(time) * 1000;\n}\n","import type Swup from '../Swup.js';\nimport { FetchError, type FetchOptions, type PageData } from './fetchPage.js';\nimport { type VisitInitOptions, type Visit, VisitState } from './Visit.js';\nimport { createHistoryRecord, updateHistoryRecord, Location, classify } from '../helpers.js';\nimport { getContextualAttr } from '../utils.js';\n\nexport type HistoryAction = 'push' | 'replace';\nexport type HistoryDirection = 'forwards' | 'backwards';\nexport type NavigationToSelfAction = 'scroll' | 'navigate';\nexport type CacheControl = Partial<{ read: boolean; write: boolean }>;\n\n/** Define how to navigate to a page. */\ntype NavigationOptions = {\n\t/** Whether this visit is animated. Default: `true` */\n\tanimate?: boolean;\n\t/** Name of a custom animation to run. */\n\tanimation?: string;\n\t/** History action to perform: `push` for creating a new history entry, `replace` for replacing the current entry. Default: `push` */\n\thistory?: HistoryAction;\n\t/** Whether this visit should read from or write to the cache. */\n\tcache?: CacheControl;\n\t/** Custom metadata associated with this visit. */\n\tmeta?: Record<string, unknown>;\n};\n\n/**\n * Navigate to a new URL.\n * @param url The URL to navigate to.\n * @param options Options for how to perform this visit.\n * @returns Promise<void>\n */\nexport function navigate(\n\tthis: Swup,\n\turl: string,\n\toptions: NavigationOptions & FetchOptions = {},\n\tinit: Omit<VisitInitOptions, 'to'> = {}\n) {\n\tif (typeof url !== 'string') {\n\t\tthrow new Error(`swup.navigate() requires a URL parameter`);\n\t}\n\n\t// Check if the visit should be ignored\n\tif (this.shouldIgnoreVisit(url, { el: init.el, event: init.event })) {\n\t\twindow.location.assign(url);\n\t\treturn;\n\t}\n\n\tconst { url: to, hash } = Location.fromUrl(url);\n\n\tconst visit = this.createVisit({ ...init, to, hash });\n\tthis.performNavigation(visit, options);\n}\n\n/**\n * Start a visit to a new URL.\n *\n * Internal method that assumes the visit context has already been created.\n *\n * As a user, you should call `swup.navigate(url)` instead.\n *\n * @param url The URL to navigate to.\n * @param options Options for how to perform this visit.\n * @returns Promise<void>\n */\nexport async function performNavigation(\n\tthis: Swup,\n\tvisit: Visit,\n\toptions: NavigationOptions & FetchOptions = {}\n): Promise<void> {\n\tif (this.navigating) {\n\t\tif (this.visit.state >= VisitState.ENTERING) {\n\t\t\t// Currently navigating and content already loaded? Finish and queue\n\t\t\tvisit.state = VisitState.QUEUED;\n\t\t\tthis.onVisitEnd = () => this.performNavigation(visit, options);\n\t\t\treturn;\n\t\t} else {\n\t\t\t// Currently navigating and content not loaded? Abort running visit\n\t\t\tawait this.hooks.call('visit:abort', this.visit, undefined);\n\t\t\tdelete this.visit.to.document;\n\t\t\tthis.visit.state = VisitState.ABORTED;\n\t\t}\n\t}\n\n\tthis.navigating = true;\n\tthis.visit = visit;\n\n\tconst { el } = visit.trigger;\n\toptions.referrer = options.referrer || this.location.url;\n\n\tif (options.animate === false) {\n\t\tvisit.animation.animate = false;\n\t}\n\n\t// Clean up old animation classes\n\tif (!visit.animation.animate) {\n\t\tthis.classes.clear();\n\t}\n\n\t// Get history action from option or attribute on trigger element\n\tconst history = options.history || getContextualAttr(el, 'data-swup-history');\n\tif (typeof history === 'string' && ['push', 'replace'].includes(history)) {\n\t\tvisit.history.action = history as HistoryAction;\n\t}\n\n\t// Get custom animation name from option or attribute on trigger element\n\tconst animation = options.animation || getContextualAttr(el, 'data-swup-animation');\n\tif (typeof animation === 'string') {\n\t\tvisit.animation.name = animation;\n\t}\n\n\t// Get custom metadata from option\n\tvisit.meta = options.meta || {};\n\n\t// Sanitize cache option\n\tif (typeof options.cache === 'object') {\n\t\tvisit.cache.read = options.cache.read ?? visit.cache.read;\n\t\tvisit.cache.write = options.cache.write ?? visit.cache.write;\n\t} else if (options.cache !== undefined) {\n\t\tvisit.cache = { read: !!options.cache, write: !!options.cache };\n\t}\n\t// Delete this so that window.fetch doesn't mis-interpret it\n\tdelete options.cache;\n\n\ttry {\n\t\tawait this.hooks.call('visit:start', visit, undefined);\n\n\t\tvisit.state = VisitState.STARTED;\n\n\t\t// Begin loading page\n\t\tconst page = this.hooks.call('page:load', visit, { options }, async (visit, args) => {\n\t\t\t// Read from cache\n\t\t\tlet cachedPage: PageData | undefined;\n\t\t\tif (visit.cache.read) {\n\t\t\t\tcachedPage = this.cache.get(visit.to.url);\n\t\t\t}\n\n\t\t\targs.page = cachedPage || (await this.fetchPage(visit.to.url, args.options));\n\t\t\targs.cache = !!cachedPage;\n\n\t\t\treturn args.page;\n\t\t});\n\n\t\t/**\n\t\t * When the page is loaded: mark the visit as loaded and save\n\t\t * the raw html and a parsed document of the received page in the visit object\n\t\t */\n\t\tpage.then(({ html }) => {\n\t\t\tvisit.advance(VisitState.LOADED);\n\t\t\tvisit.to.html = html;\n\t\t\tvisit.to.document = new DOMParser().parseFromString(html, 'text/html');\n\t\t});\n\n\t\t// Create/update history record if this is not a popstate call or leads to the same URL\n\t\tconst newUrl = visit.to.url + visit.to.hash;\n\t\tif (!visit.history.popstate) {\n\t\t\tif (visit.history.action === 'replace' || visit.to.url === this.location.url) {\n\t\t\t\tupdateHistoryRecord(newUrl);\n\t\t\t} else {\n\t\t\t\tthis.currentHistoryIndex++;\n\t\t\t\tcreateHistoryRecord(newUrl, { index: this.currentHistoryIndex });\n\t\t\t}\n\t\t}\n\t\tthis.location = Location.fromUrl(newUrl);\n\n\t\t// Mark visit type with classes\n\t\tif (visit.history.popstate) {\n\t\t\tthis.classes.add('is-popstate');\n\t\t}\n\t\tif (visit.animation.name) {\n\t\t\tthis.classes.add(`to-${classify(visit.animation.name)}`);\n\t\t}\n\n\t\t// Wait for page before starting to animate out?\n\t\tif (visit.animation.wait) {\n\t\t\tawait page;\n\t\t}\n\n\t\t// Check if failed/aborted in the meantime\n\t\tif (visit.done) return;\n\n\t\t// Perform the actual transition: animate and replace content\n\t\tawait this.hooks.call('visit:transition', visit, undefined, async () => {\n\t\t\t// No animation? Just await page and render\n\t\t\tif (!visit.animation.animate) {\n\t\t\t\tawait this.hooks.call('animation:skip', undefined);\n\t\t\t\tawait this.renderPage(visit, await page);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Animate page out, render page, animate page in\n\t\t\tvisit.advance(VisitState.LEAVING);\n\t\t\tawait this.animatePageOut(visit);\n\t\t\tif (visit.animation.native && document.startViewTransition) {\n\t\t\t\tawait document.startViewTransition(\n\t\t\t\t\tasync () => await this.renderPage(visit, await page)\n\t\t\t\t).finished;\n\t\t\t} else {\n\t\t\t\tawait this.renderPage(visit, await page);\n\t\t\t}\n\t\t\tawait this.animatePageIn(visit);\n\t\t});\n\n\t\t// Check if failed/aborted in the meantime\n\t\tif (visit.done) return;\n\n\t\t// Finalize visit\n\t\tawait this.hooks.call('visit:end', visit, undefined, () => this.classes.clear());\n\t\tvisit.state = VisitState.COMPLETED;\n\t\tthis.navigating = false;\n\n\t\t/** Run eventually queued function */\n\t\tif (this.onVisitEnd) {\n\t\t\tthis.onVisitEnd();\n\t\t\tthis.onVisitEnd = undefined;\n\t\t}\n\t} catch (error) {\n\t\t// Return early if error is undefined or signals an aborted request\n\t\tif (!error || (error as FetchError)?.aborted) {\n\t\t\tvisit.state = VisitState.ABORTED;\n\t\t\treturn;\n\t\t}\n\n\t\tvisit.state = VisitState.FAILED;\n\n\t\t// Log to console\n\t\tconsole.error(error);\n\n\t\t// Remove current history entry, then load requested url in browser\n\t\tthis.options.skipPopStateHandling = () => {\n\t\t\twindow.location.assign(visit.to.url + visit.to.hash);\n\t\t\treturn true;\n\t\t};\n\n\t\t// Go back to the actual page we're still at\n\t\twindow.history.back();\n\t} finally {\n\t\tdelete visit.to.document;\n\t}\n}\n","import type Swup from '../Swup.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Perform the out/leave animation of the current page.\n * @returns Promise<void>\n */\nexport const animatePageOut = async function (this: Swup, visit: Visit) {\n\tawait this.hooks.call('animation:out:start', visit, undefined, () => {\n\t\tthis.classes.add('is-changing', 'is-animating', 'is-leaving');\n\t});\n\n\tawait this.hooks.call('animation:out:await', visit, { skip: false }, (visit, { skip }) => {\n\t\tif (skip) return;\n\t\treturn this.awaitAnimations({ selector: visit.animation.selector });\n\t});\n\n\tawait this.hooks.call('animation:out:end', visit, undefined);\n};\n","import type Swup from '../Swup.js';\nimport { query, queryAll } from '../utils.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Perform the replacement of content after loading a page.\n *\n * @returns Whether all containers were replaced.\n */\nexport const replaceContent = function (this: Swup, visit: Visit): boolean {\n\tconst incomingDocument = visit.to.document;\n\tif (!incomingDocument) return false;\n\n\t// Update browser title\n\tconst title = incomingDocument.querySelector('title')?.innerText || '';\n\tdocument.title = title;\n\n\t// Save persisted elements\n\tconst persistedElements = queryAll('[data-swup-persist]:not([data-swup-persist=\"\"])');\n\n\t// Update content containers\n\tconst replaced = visit.containers\n\t\t.map((selector) => {\n\t\t\tconst currentEl = document.querySelector(selector);\n\t\t\tconst incomingEl = incomingDocument.querySelector(selector);\n\t\t\tif (currentEl && incomingEl) {\n\t\t\t\tcurrentEl.replaceWith(incomingEl.cloneNode(true));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!currentEl) {\n\t\t\t\tconsole.warn(`[swup] Container missing in current document: ${selector}`);\n\t\t\t}\n\t\t\tif (!incomingEl) {\n\t\t\t\tconsole.warn(`[swup] Container missing in incoming document: ${selector}`);\n\t\t\t}\n\t\t\treturn false;\n\t\t})\n\t\t.filter(Boolean);\n\n\t// Restore persisted elements\n\tpersistedElements.forEach((existing) => {\n\t\tconst key = existing.getAttribute('data-swup-persist');\n\t\tconst replacement = query(`[data-swup-persist=\"${key}\"]`);\n\t\tif (replacement && replacement !== existing) {\n\t\t\treplacement.replaceWith(existing);\n\t\t}\n\t});\n\n\t// Return true if all containers were replaced\n\treturn replaced.length === visit.containers.length;\n};\n","import type Swup from '../Swup.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Update the scroll position after page render.\n * @returns Promise<boolean>\n */\nexport const scrollToContent = function (this: Swup, visit: Visit): boolean {\n\tconst options: ScrollIntoViewOptions = { behavior: 'auto' };\n\tconst { target, reset } = visit.scroll;\n\tconst scrollTarget = target ?? visit.to.hash;\n\n\tlet scrolled = false;\n\n\tif (scrollTarget) {\n\t\tscrolled = this.hooks.callSync(\n\t\t\t'scroll:anchor',\n\t\t\tvisit,\n\t\t\t{ hash: scrollTarget, options },\n\t\t\t(visit, { hash, options }) => {\n\t\t\t\tconst anchor = this.getAnchorElement(hash);\n\t\t\t\tif (anchor) {\n\t\t\t\t\tanchor.scrollIntoView(options);\n\t\t\t\t}\n\t\t\t\treturn !!anchor;\n\t\t\t}\n\t\t);\n\t}\n\n\tif (reset && !scrolled) {\n\t\tscrolled = this.hooks.callSync('scroll:top', visit, { options }, (visit, { options }) => {\n\t\t\twindow.scrollTo({ top: 0, left: 0, ...options });\n\t\t\treturn true;\n\t\t});\n\t}\n\n\treturn scrolled;\n};\n","import type Swup from '../Swup.js';\nimport { nextTick } from '../utils.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Perform the in/enter animation of the next page.\n * @returns Promise<void>\n */\nexport const animatePageIn = async function (this: Swup, visit: Visit) {\n\t// Check if failed/aborted in the meantime\n\tif (visit.done) return;\n\n\tconst animation = this.hooks.call(\n\t\t'animation:in:await',\n\t\tvisit,\n\t\t{ skip: false },\n\t\t(visit, { skip }) => {\n\t\t\tif (skip) return;\n\t\t\treturn this.awaitAnimations({ selector: visit.animation.selector });\n\t\t}\n\t);\n\n\tawait nextTick();\n\n\tawait this.hooks.call('animation:in:start', visit, undefined, () => {\n\t\tthis.classes.remove('is-animating');\n\t});\n\n\tawait animation;\n\n\tawait this.hooks.call('animation:in:end', visit, undefined);\n};\n","import { updateHistoryRecord, getCurrentUrl, classify, Location } from '../helpers.js';\nimport type Swup from '../Swup.js';\nimport type { PageData } from './fetchPage.js';\nimport { VisitState, type Visit } from './Visit.js';\n\n/**\n * Render the next page: replace the content and update scroll position.\n */\nexport const renderPage = async function (this: Swup, visit: Visit, page: PageData): Promise<void> {\n\t// Check if failed/aborted in the meantime\n\tif (visit.done) return;\n\n\tvisit.advance(VisitState.ENTERING);\n\n\tconst { url } = page;\n\n\t// update state if the url was redirected\n\tif (!this.isSameResolvedUrl(getCurrentUrl(), url)) {\n\t\tupdateHistoryRecord(url);\n\t\tthis.location = Location.fromUrl(url);\n\t\tvisit.to.url = this.location.url;\n\t\tvisit.to.hash = this.location.hash;\n\t}\n\n\t// replace content: allow handlers and plugins to overwrite paga data and containers\n\tawait this.hooks.call('content:replace', visit, { page }, (visit, { page }) => {\n\t\tthis.classes.remove('is-leaving');\n\t\t// only add for animated page loads\n\t\tif (visit.animation.animate) {\n\t\t\tthis.classes.add('is-rendering');\n\t\t}\n\t\tconst success = this.replaceContent(visit);\n\t\tif (!success) {\n\t\t\tthrow new Error('[swup] Container mismatch, aborting');\n\t\t}\n\t\tif (visit.animation.animate) {\n\t\t\t// Make sure to add these classes to new containers as well\n\t\t\tthis.classes.add('is-changing', 'is-animating', 'is-rendering');\n\t\t\tif (visit.animation.name) {\n\t\t\t\tthis.classes.add(`to-${classify(visit.animation.name)}`);\n\t\t\t}\n\t\t}\n\t});\n\n\t// scroll into view: either anchor or top of page\n\tawait this.hooks.call('content:scroll', visit, undefined, () => {\n\t\treturn this.scrollToContent(visit);\n\t});\n\n\tawait this.hooks.call('page:view', visit, { url: this.location.url, title: document.title });\n};\n","import type Swup from '../Swup.js';\n\nexport type Plugin = {\n\t/** Identify as a swup plugin */\n\tisSwupPlugin: true;\n\t/** Name of this plugin */\n\tname: string;\n\t/** Version of this plugin. Currently not in use, defined here for backward compatiblity. */\n\tversion?: string;\n\t/** The swup instance that mounted this plugin */\n\tswup?: Swup;\n\t/** Version requirements of this plugin. Example: `{ swup: '>=4' }` */\n\trequires?: Record<string, string | string[]>;\n\t/** Run on mount */\n\tmount: () => void;\n\t/** Run on unmount */\n\tunmount: () => void;\n\t_beforeMount?: () => void;\n\t_afterUnmount?: () => void;\n\t_checkRequirements?: () => boolean;\n};\n\nconst isSwupPlugin = (maybeInvalidPlugin: unknown): maybeInvalidPlugin is Plugin => {\n\t// @ts-ignore: this might be anything, object or no\n\treturn Boolean(maybeInvalidPlugin?.isSwupPlugin);\n};\n\n/** Install a plugin. */\nexport const use = function (this: Swup, plugin: unknown) {\n\tif (!isSwupPlugin(plugin)) {\n\t\tconsole.error('Not a swup plugin instance', plugin);\n\t\treturn;\n\t}\n\n\tplugin.swup = this;\n\tif (plugin._checkRequirements) {\n\t\tif (!plugin._checkRequirements()) {\n\t\t\treturn;\n\t\t}\n\t}\n\tif (plugin._beforeMount) {\n\t\tplugin._beforeMount();\n\t}\n\tplugin.mount();\n\n\tthis.plugins.push(plugin);\n\n\treturn this.plugins;\n};\n\n/** Uninstall a plugin. */\nexport function unuse(this: Swup, pluginOrName: Plugin | string) {\n\tconst plugin = this.findPlugin(pluginOrName);\n\tif (!plugin) {\n\t\tconsole.error('No such plugin', plugin);\n\t\treturn;\n\t}\n\n\tplugin.unmount();\n\tif (plugin._afterUnmount) {\n\t\tplugin._afterUnmount();\n\t}\n\n\tthis.plugins = this.plugins.filter((p) => p !== plugin);\n\n\treturn this.plugins;\n}\n\n/** Find a plugin by name or reference. */\nexport function findPlugin(this: Swup, pluginOrName: Plugin | string) {\n\treturn this.plugins.find(\n\t\t(plugin) =>\n\t\t\tplugin === pluginOrName ||\n\t\t\tplugin.name === pluginOrName ||\n\t\t\tplugin.name === `Swup${String(pluginOrName)}`\n\t);\n}\n","import type Swup from '../Swup.js';\n\n/**\n * Utility function to validate and run the global option 'resolveUrl'\n * @param {string} url\n * @returns {string} the resolved url\n */\nexport function resolveUrl(this: Swup, url: string): string {\n\tif (typeof this.options.resolveUrl !== 'function') {\n\t\tconsole.warn(`[swup] options.resolveUrl expects a callback function.`);\n\t\treturn url;\n\t}\n\tconst result = this.options.resolveUrl(url);\n\tif (!result || typeof result !== 'string') {\n\t\tconsole.warn(`[swup] options.resolveUrl needs to return a url`);\n\t\treturn url;\n\t}\n\tif (result.startsWith('//') || result.startsWith('http')) {\n\t\tconsole.warn(`[swup] options.resolveUrl needs to return a relative url`);\n\t\treturn url;\n\t}\n\treturn result;\n}\n\n/**\n * Compares the resolved version of two paths and returns true if they are the same\n * @param {string} url1\n * @param {string} url2\n * @returns {boolean}\n */\nexport function isSameResolvedUrl(this: Swup, url1: string, url2: string): boolean {\n\treturn this.resolveUrl(url1) === this.resolveUrl(url2);\n}\n","import { type DelegateEvent } from 'delegate-it';\n\nimport version from './config/version.js';\n\nimport { delegateEvent, getCurrentUrl, Location, updateHistoryRecord } from './helpers.js';\nimport { type DelegateEventUnsubscribe } from './helpers/delegateEvent.js';\n\nimport { Cache } from './modules/Cache.js';\nimport { Classes } from './modules/Classes.js';\nimport { type Visit, createVisit } from './modules/Visit.js';\nimport { Hooks, type HookName, type HookInitOptions } from './modules/Hooks.js';\nimport { getAnchorElement } from './modules/getAnchorElement.js';\nimport { awaitAnimations } from './modules/awaitAnimations.js';\nimport { navigate, performNavigation, type NavigationToSelfAction } from './modules/navigate.js';\nimport { fetchPage } from './modules/fetchPage.js';\nimport { animatePageOut } from './modules/animatePageOut.js';\nimport { replaceContent } from './modules/replaceContent.js';\nimport { scrollToContent } from './modules/scrollToContent.js';\nimport { animatePageIn } from './modules/animatePageIn.js';\nimport { renderPage } from './modules/renderPage.js';\nimport { use, unuse, findPlugin, type Plugin } from './modules/plugins.js';\nimport { isSameResolvedUrl, resolveUrl } from './modules/resolveUrl.js';\nimport { nextTick } from './utils.js';\nimport { type HistoryState } from './helpers/history.js';\n\n/** Options for customizing swup's behavior. */\nexport type Options = {\n\t/** Whether history visits are animated. Default: `false` */\n\tanimateHistoryBrowsing: boolean;\n\t/** Selector for detecting animation timing. Default: `[class*=\"transition-\"]` */\n\tanimationSelector: string | false;\n\t/** Elements on which to add animation classes. Default: `html` element */\n\tanimationScope: 'html' | 'containers';\n\t/** Enable in-memory page cache. Default: `true` */\n\tcache: boolean;\n\t/** Content containers to be replaced on page visits. Default: `['#swup']` */\n\tcontainers: string[];\n\t/** Callback for ignoring visits. Receives the element and event that triggered the visit. */\n\tignoreVisit: (url: string, { el, event }: { el?: Element; event?: Event }) => boolean;\n\t/** Selector for links that trigger visits. Default: `'a[href]'` */\n\tlinkSelector: string;\n\t/** How swup handles links to the same page. Default: `scroll` */\n\tlinkToSelf: NavigationToSelfAction;\n\t/** Enable native animations using the View Transitions API. */\n\tnative: boolean;\n\t/** Hook handlers to register. */\n\thooks: Partial<HookInitOptions>;\n\t/** Plugins to register on startup. */\n\tplugins: Plugin[];\n\t/** Custom headers sent along with fetch requests. */\n\trequestHeaders: Record<string, string>;\n\t/** Rewrite URLs before loading them. */\n\tresolveUrl: (url: string) => string;\n\t/** Callback for telling swup to ignore certain popstate events.  */\n\tskipPopStateHandling: (event: PopStateEvent) => boolean;\n\t/** Request timeout in milliseconds. */\n\ttimeout: number;\n};\n\nconst defaults: Options = {\n\tanimateHistoryBrowsing: false,\n\tanimationSelector: '[class*=\"transition-\"]',\n\tanimationScope: 'html',\n\tcache: true,\n\tcontainers: ['#swup'],\n\thooks: {},\n\tignoreVisit: (url, { el } = {}) => !!el?.closest('[data-no-swup]'),\n\tlinkSelector: 'a[href]',\n\tlinkToSelf: 'scroll',\n\tnative: false,\n\tplugins: [],\n\tresolveUrl: (url) => url,\n\trequestHeaders: {\n\t\t'X-Requested-With': 'swup',\n\t\t'Accept': 'text/html, application/xhtml+xml'\n\t},\n\tskipPopStateHandling: (event) => (event.state as HistoryState)?.source !== 'swup',\n\ttimeout: 0\n};\n\n/** Swup page transition library. */\nexport default class Swup {\n\t/** Library version */\n\treadonly version: string = version;\n\t/** Options passed into the instance */\n\toptions: Options;\n\t/** Default options before merging user options */\n\treadonly defaults: Options = defaults;\n\t/** Registered plugin instances */\n\tplugins: Plugin[] = [];\n\t/** Data about the current visit */\n\tvisit: Visit;\n\t/** Cache instance */\n\treadonly cache: Cache;\n\t/** Hook registry */\n\treadonly hooks: Hooks;\n\t/** Animation class manager */\n\treadonly classes: Classes;\n\t/** Location of the currently visible page */\n\tlocation: Location = Location.fromUrl(window.location.href);\n\t/** URL of the currently visible page @deprecated Use swup.location.url instead */\n\tget currentPageUrl(): string {\n\t\treturn this.location.url;\n\t}\n\t/** Index of the current history entry */\n\tprotected currentHistoryIndex: number;\n\t/** Delegated event subscription handle */\n\tprotected clickDelegate?: DelegateEventUnsubscribe;\n\t/** Navigation status */\n\tprotected navigating: boolean = false;\n\t/** Run anytime a visit ends */\n\tprotected onVisitEnd?: () => Promise<unknown>;\n\n\t/** Install a plugin */\n\tuse = use;\n\t/** Uninstall a plugin */\n\tunuse = unuse;\n\t/** Find a plugin by name or instance */\n\tfindPlugin = findPlugin;\n\n\t/** Log a message. Has no effect unless debug plugin is installed */\n\tlog: (message: string, context?: unknown) => void = () => {};\n\n\t/** Navigate to a new URL */\n\tnavigate = navigate;\n\t/** Actually perform a navigation */\n\tprotected performNavigation = performNavigation;\n\t/** Create a new context for this visit */\n\tprotected createVisit = createVisit;\n\t/** Register a delegated event listener */\n\tdelegateEvent = delegateEvent;\n\t/** Fetch a page from the server */\n\tfetchPage = fetchPage;\n\t/** Resolve when animations on the page finish */\n\tawaitAnimations = awaitAnimations;\n\tprotected renderPage = renderPage;\n\t/** Replace the content after page load */\n\treplaceContent = replaceContent;\n\tprotected animatePageIn = animatePageIn;\n\tprotected animatePageOut = animatePageOut;\n\tprotected scrollToContent = scrollToContent;\n\t/** Find the anchor element for a given hash */\n\tgetAnchorElement = getAnchorElement;\n\n\t/** Get the current page URL */\n\tgetCurrentUrl = getCurrentUrl;\n\t/** Resolve a URL to its final location */\n\tresolveUrl = resolveUrl;\n\t/** Check if two URLs resolve to the same location */\n\tprotected isSameResolvedUrl = isSameResolvedUrl;\n\n\tconstructor(options: Partial<Options> = {}) {\n\t\t// Merge defaults and options\n\t\tthis.options = { ...this.defaults, ...options };\n\n\t\tthis.handleLinkClick = this.handleLinkClick.bind(this);\n\t\tthis.handlePopState = this.handlePopState.bind(this);\n\n\t\tthis.cache = new Cache(this);\n\t\tthis.classes = new Classes(this);\n\t\tthis.hooks = new Hooks(this);\n\t\tthis.visit = this.createVisit({ to: '' });\n\n\t\tthis.currentHistoryIndex = (window.history.state as HistoryState)?.index ?? 1;\n\n\t\tthis.enable();\n\t}\n\n\t/** Enable this instance, adding listeners and classnames. */\n\tasync enable() {\n\t\t// Add event listener\n\t\tconst { linkSelector } = this.options;\n\t\tthis.clickDelegate = this.delegateEvent(linkSelector, 'click', this.handleLinkClick);\n\n\t\twindow.addEventListener('popstate', this.handlePopState);\n\n\t\t// Set scroll restoration to manual if animating history visits\n\t\tif (this.options.animateHistoryBrowsing) {\n\t\t\twindow.history.scrollRestoration = 'manual';\n\t\t}\n\n\t\t// Initial save to cache\n\t\tif (this.options.cache) {\n\t\t\t// Disabled to avoid caching modified dom state: logic moved to preload plugin\n\t\t\t// https://github.com/swup/swup/issues/475\n\t\t}\n\n\t\t// Sanitize/check native option\n\t\tthis.options.native = this.options.native && !!document.startViewTransition;\n\n\t\t// Mount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.use(plugin));\n\n\t\t// Install user hooks\n\t\tfor (const [key, handler] of Object.entries(this.options.hooks)) {\n\t\t\t// Build hook options from modifier suffix: 'content:replace.before' => { before: true }\n\t\t\tconst [hook, modifiers] = this.hooks.parseName(key as HookName);\n\t\t\t// @ts-expect-error: object.entries() does not preserve key/value types\n\t\t\tthis.hooks.on(hook, handler, modifiers);\n\t\t}\n\n\t\t// Create initial history record\n\t\tif ((window.history.state as HistoryState)?.source !== 'swup') {\n\t\t\tupdateHistoryRecord(null, { index: this.currentHistoryIndex });\n\t\t}\n\n\t\t// Give consumers a chance to hook into enable\n\t\tawait nextTick();\n\n\t\t// Trigger enable hook\n\t\tawait this.hooks.call('enable', undefined, undefined, () => {\n\t\t\tconst html = document.documentElement;\n\t\t\thtml.classList.add('swup-enabled');\n\t\t\thtml.classList.toggle('swup-native', this.options.native);\n\t\t});\n\t}\n\n\t/** Disable this instance, removing listeners and classnames. */\n\tasync destroy() {\n\t\t// remove delegated listener\n\t\tthis.clickDelegate!.destroy();\n\n\t\t// remove popstate listener\n\t\twindow.removeEventListener('popstate', this.handlePopState);\n\n\t\t// empty cache\n\t\tthis.cache.clear();\n\n\t\t// unmount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.unuse(plugin));\n\n\t\t// trigger disable hook\n\t\tawait this.hooks.call('disable', undefined, undefined, () => {\n\t\t\tconst html = document.documentElement;\n\t\t\thtml.classList.remove('swup-enabled');\n\t\t\thtml.classList.remove('swup-native');\n\t\t});\n\n\t\t// remove handlers\n\t\tthis.hooks.clear();\n\t}\n\n\t/** Determine if a visit should be ignored by swup, based on URL or trigger element. */\n\tshouldIgnoreVisit(href: string, { el, event }: { el?: Element; event?: Event } = {}) {\n\t\tconst { origin, url, hash } = Location.fromUrl(href);\n\n\t\t// Ignore if the new origin doesn't match the current one\n\t\tif (origin !== window.location.origin) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the link/form would open a new window (or none at all)\n\t\tif (el && this.triggerWillOpenNewWindow(el)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the visit should be ignored as per user options\n\t\tif (this.options.ignoreVisit(url + hash, { el, event })) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Finally, allow the visit\n\t\treturn false;\n\t}\n\n\tprotected handleLinkClick(event: DelegateEvent<MouseEvent>) {\n\t\tconst el = event.delegateTarget as HTMLAnchorElement;\n\t\tconst { href, url, hash } = Location.fromElement(el);\n\n\t\t// Exit early if the link should be ignored\n\t\tif (this.shouldIgnoreVisit(href, { el, event })) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore if swup is currently navigating towards the link's URL\n\t\tif (this.navigating && url === this.visit.to.url) {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tconst visit = this.createVisit({ to: url, hash, el, event });\n\n\t\t// Exit early if control key pressed\n\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) {\n\t\t\tthis.hooks.callSync('link:newtab', visit, { href });\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if other than left mouse button\n\t\tif (event.button !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.hooks.callSync('link:click', visit, { el, event }, () => {\n\t\t\tconst from = visit.from.url ?? '';\n\n\t\t\tevent.preventDefault();\n\n\t\t\t// Handle links to the same page\n\t\t\tif (!url || url === from) {\n\t\t\t\tif (hash) {\n\t\t\t\t\t// With hash: scroll to anchor\n\t\t\t\t\tthis.hooks.callSync('link:anchor', visit, { hash }, () => {\n\t\t\t\t\t\tupdateHistoryRecord(url + hash);\n\t\t\t\t\t\tthis.scrollToContent(visit);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Without hash: scroll to top or load/reload page\n\t\t\t\t\tthis.hooks.callSync('link:self', visit, undefined, () => {\n\t\t\t\t\t\tif (this.options.linkToSelf === 'navigate') {\n\t\t\t\t\t\t\tthis.performNavigation(visit);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tupdateHistoryRecord(url);\n\t\t\t\t\t\t\tthis.scrollToContent(visit);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Exit early if the resolved path hasn't changed\n\t\t\tif (this.isSameResolvedUrl(url, from)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Finally, proceed with loading the page\n\t\t\tthis.performNavigation(visit);\n\t\t});\n\t}\n\n\tprotected handlePopState(event: PopStateEvent) {\n\t\tconst href: string = (event.state as HistoryState)?.url ?? window.location.href;\n\n\t\t// Exit early if this event should be ignored\n\t\tif (this.options.skipPopStateHandling(event)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if the resolved path hasn't changed\n\t\tif (this.isSameResolvedUrl(getCurrentUrl(), this.location.url)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { url, hash } = Location.fromUrl(href);\n\n\t\tconst visit = this.createVisit({ to: url, hash, event });\n\n\t\t// Mark as history visit\n\t\tvisit.history.popstate = true;\n\n\t\t// Determine direction of history visit\n\t\tconst index = (event.state as HistoryState)?.index ?? 0;\n\t\tif (index && index !== this.currentHistoryIndex) {\n\t\t\tconst direction = index - this.currentHistoryIndex > 0 ? 'forwards' : 'backwards';\n\t\t\tvisit.history.direction = direction;\n\t\t\tthis.currentHistoryIndex = index;\n\t\t}\n\n\t\t// Disable animation & scrolling for history visits\n\t\tvisit.animation.animate = false;\n\t\tvisit.scroll.reset = false;\n\t\tvisit.scroll.target = false;\n\n\t\t// Animated history visit: re-enable animation & scroll reset\n\t\tif (this.options.animateHistoryBrowsing) {\n\t\t\tvisit.animation.animate = true;\n\t\t\tvisit.scroll.reset = true;\n\t\t}\n\n\t\tthis.hooks.callSync('history:popstate', visit, { event }, () => {\n\t\t\tthis.performNavigation(visit);\n\t\t});\n\t}\n\n\t/** Determine whether an element will open a new tab when clicking/activating. */\n\tprotected triggerWillOpenNewWindow(triggerEl: Element) {\n\t\tif (triggerEl.matches('[download], [target=\"_blank\"]')) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n"],"names":["classify","text","fallback","String","toLowerCase","replace","getCurrentUrl","hash","window","location","pathname","search","createHistoryRecord","url","data","state","random","Math","source","history","pushState","updateHistoryRecord","replaceState","delegateEvent","selector","type","callback","options","controller","AbortController","signal","delegate","destroy","abort","Location","URL","constructor","base","document","baseURI","super","toString","Object","setPrototypeOf","this","prototype","fromElement","el","href","getAttribute","fromUrl","matchPath","path","match","error","Error","fetchPage","_this","_temp2","_result","status","responseUrl","response","Promise","resolve","then","html","hooks","call","visit","FetchError","finalUrl","page","cache","write","method","set","headers","requestHeaders","timeout","timedOut","timeoutId","setTimeout","_temp","fetch","_this$hooks$call","clearTimeout","_catch","name","aborted","e","reject","message","details","Cache","swup","pages","Map","size","all","copy","forEach","key","has","get","result","callSync","undefined","update","payload","delete","clear","prune","predicate","urlToResolve","resolveUrl","query","context","querySelector","queryAll","Array","from","querySelectorAll","nextTick","requestAnimationFrame","isPromise","obj","runAsPromise","func","args","forceReflow","element","body","getBoundingClientRect","getContextualAttr","attr","target","closest","hasAttribute","Classes","swupClasses","selectors","scope","animation","containers","isArray","join","targets","trim","add","classList","slice","arguments","remove","className","split","filter","c","isSwupClass","some","startsWith","Visit","id","to","trigger","scroll","meta","event","animate","wait","native","animationScope","animationSelector","read","action","popstate","direction","reset","advance","done","createVisit","_iteratorSymbol","Symbol","iterator","pact","value","s","_Pact","o","_settle","bind","v","observer","onFulfilled","onRejected","thenable","Hooks","registry","init","hook","create","exists","ledger","console","on","handler","warn","registration","off","before","once","arg1","arg2","arg3","defaultHandler","parseCallArgs","after","getHandlers","run","dispatchDomEvent","runSync","registrations","rethrow","_exit","_this2","results","check","step","_cycle","next","return","_fixup","TypeError","i","length","push","array","_isSettledPact","_forTo","values","_forOf","_result2","found","replaced","sort","sortRegistrations","T","index","createDefaultHandler","a","b","priority","detail","dispatchEvent","CustomEvent","bubbles","parseName","modifiers","reduce","acc","mod","getAnchorElement","charAt","substring","decoded","decodeURIComponent","getElementById","CSS","escape","awaitAnimations","elements","animatedElements","awaitedAnimations","map","propCount","styles","getComputedStyle","transitionDelays","getStyleProperties","TRANSITION","transitionDurations","transitionTimeout","calculateTimeout","animationDelays","ANIMATION","animationDurations","animationTimeout","max","getTransitionInfo","endEvent","startTime","performance","now","propsTransitioned","end","removeEventListener","onEnd","elapsedTime","addEventListener","awaitAnimationsOnElement","Boolean","delays","durations","concat","duration","toMs","time","parseFloat","performNavigation","_temp4","navigating","referrer","classes","includes","_exit2","_temp8","_result4","animatePageOut","_temp6","animatePageIn","_temp5","startViewTransition","_renderPage3","renderPage","_page3","finished","_renderPage2","_page2","_temp7","_renderPage","_page","onVisitEnd","_temp9","_this$fetchPage","cachedPage","DOMParser","parseFromString","newUrl","currentHistoryIndex","skipPopStateHandling","assign","back","_finallyRethrows","_wasThrown","_result3","_temp3","navigate","shouldIgnoreVisit","skip","replaceContent","incomingDocument","title","innerText","persistedElements","currentEl","incomingEl","replaceWith","cloneNode","existing","replacement","scrollToContent","behavior","scrollTarget","scrolled","anchor","scrollIntoView","scrollTo","top","left","isSameResolvedUrl","use","plugin","maybeInvalidPlugin","isSwupPlugin","_checkRequirements","_beforeMount","mount","plugins","unuse","pluginOrName","findPlugin","unmount","_afterUnmount","p","find","url1","url2","defaults","animateHistoryBrowsing","ignoreVisit","linkSelector","linkToSelf","Accept","Swup","currentPageUrl","version","clickDelegate","log","handleLinkClick","handlePopState","enable","scrollRestoration","entries","documentElement","toggle","origin","triggerWillOpenNewWindow","delegateTarget","preventDefault","metaKey","ctrlKey","shiftKey","altKey","button","triggerEl","matches"],"mappings":"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"}